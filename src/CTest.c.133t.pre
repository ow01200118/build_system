
;; Function main (main, funcdef_no=23, decl_uid=2445, cgraph_uid=23, symbol_order=23) (executed once)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
i_22 = i_12
i_22 = &NULL
j_23 = j_4
j_23 = &NULL
k_24 = k_6
k_24 = &NULL
i.0_1 = i_22
_2 = i.0_1 + UNKNOWN
j_11 = j_23
j_11 = &NONLOCAL
k_10 = k_24
k_10 = &NONLOCAL
j_4 = j_11
j_4 = j_23
k_6 = k_24
k_6 = k_10
ESCAPED = &NONLOCAL
ESCAPED = &STRING
ESCAPED = j_4
ESCAPED = k_6
i_12 = i_22
i_12 = &NONLOCAL
ESCAPED = &NULL

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences
Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles
Solving graph

Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL STRING ESCAPED NONLOCAL }
NONLOCAL = { ESCAPED NONLOCAL }
STOREDANYTHING = { }
INTEGER = { ANYTHING }
i_22 = { NULL NONLOCAL }
i_12 = { NULL NONLOCAL } same as i_22
j_23 = { NULL NONLOCAL } same as i_22
j_4 = { NULL NONLOCAL } same as i_22
k_24 = { NULL NONLOCAL } same as i_22
k_6 = { NULL NONLOCAL } same as i_22
i.0_1 = { NULL NONLOCAL } same as i_22
_2 = { NULL NONLOCAL }
j_11 = { NULL NONLOCAL } same as i_22
k_10 = { NULL NONLOCAL } same as i_22
__printf_chk = { }


Alias information for main

Aliased symbols


Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { }

Flow-insensitive points-to information


;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 8 7
;;
;; Loop 1
;;  header 3, latch 8
;;  depth 1, outer 0
;;  nodes: 3 8 6 4 5
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 8 succs { 3 }
;; 7 succs { 1 }
main ()
{
  int k;
  int j;
  int i;
  unsigned int i.0_1;
  unsigned int _2;

  <bb 2> [9.09%]:

  <bb 3> [90.91%]:
  # i_22 = PHI <i_12(8), 0(2)>
  # j_23 = PHI <j_4(8), 0(2)>
  # k_24 = PHI <k_6(8), 0(2)>
  i.0_1 = (unsigned int) i_22;
  _2 = i.0_1 & 1;
  if (_2 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 4> [45.46%]:
  j_11 = j_23 + 1;
  goto <bb 6>; [100.00%]

  <bb 5> [45.46%]:
  k_10 = k_24 + 1;

  <bb 6> [90.91%]:
  # j_4 = PHI <j_11(4), j_23(5)>
  # k_6 = PHI <k_24(4), k_10(5)>
  __printf_chk (1, "j=%d, k=%d \n", j_4, k_6);
  i_12 = i_22 + 1;
  if (i_12 != 10)
    goto <bb 8>; [90.00%]
  else
    goto <bb 7>; [10.00%]

  <bb 8> [81.82%]:
  goto <bb 3>; [100.00%]

  <bb 7> [9.09%]:
  return 0;

}


