
;; Function main (main, funcdef_no=23, decl_uid=2445, cgraph_uid=23, symbol_order=23) (executed once)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 8 7
;;
;; Loop 1
;;  header 3, latch 8
;;  depth 1, outer 0
;;  nodes: 3 8 6 4 5
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 8 succs { 3 }
;; 7 succs { 1 }
Removing basic block 8

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

i_3 -> { i_12 }
.MEM_5 -> { .MEM_13 }
j_7 -> { j_4 }
.MEM_19 -> { .MEM_13 }
k_20 -> { k_6 }
Incremental SSA update started at block: 3
Number of blocks in CFG: 9
Number of blocks to update: 4 ( 44%)


main ()
{
  int k;
  int j;
  int i;
  unsigned int i.0_1;
  unsigned int _2;

  <bb 2> [9.09%]:

  <bb 3> [90.91%]:
  # i_22 = PHI <i_3(5), 0(2), i_12(7)>
  # j_23 = PHI <j_7(5), 0(2), j_4(7)>
  # k_24 = PHI <k_20(5), 0(2), k_6(7)>
  i.0_1 = (unsigned int) i_22;
  _2 = i.0_1 & 1;
  if (_2 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 4> [45.46%]:
  j_11 = j_23 + 1;

  <bb 5> [45.46%]:
  # j_7 = PHI <j_11(4)>
  # k_20 = PHI <k_24(4)>
  __printf_chk (1, "j=%d, k=%d \n", j_7, k_20);
  i_3 = i_22 + 1;
  if (i_3 != 10)
    goto <bb 3>; [90.00%]
  else
    goto <bb 8>; [10.00%]

  <bb 6> [45.46%]:
  k_10 = k_24 + 1;

  <bb 7> [45.45%]:
  # j_4 = PHI <j_23(6)>
  # k_6 = PHI <k_10(6)>
  __printf_chk (1, "j=%d, k=%d \n", j_4, k_6);
  i_12 = i_22 + 1;
  if (i_12 != 10)
    goto <bb 3>; [90.00%]
  else
    goto <bb 8>; [10.00%]

  <bb 8> [9.09%]:
  return 0;

}


